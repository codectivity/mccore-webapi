<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - MCCore Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body { background-color: #000000; color: #ffffff; }
        .nav-glass { background: rgba(0, 0, 0, 0.8); backdrop-filter: blur(10px); }
        .card-glass { background: rgba(20, 20, 20, 0.6); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.1); }
        .input-field { background: rgba(0,0,0,0.3); border: 1px solid rgba(255,255,255,0.2); }
        .input-field:focus { border-color: #ffffff; outline: none; }
        .badge { display: inline-flex; padding: 0.25rem 0.5rem; border-radius: 9999px; font-size: 0.75rem; }
        .badge-green { background: rgba(16,185,129,0.2); color: #10B981; }
        .badge-red { background: rgba(239,68,68,0.2); color: #EF4444; }
    </style>
</head>
<body class="min-h-screen bg-black text-white">
    <!-- Navigation -->
    <nav class="nav-glass border-b border-gray-800 sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-6">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-8">
                    <div class="flex items-center space-x-2">
                        <svg width="32" height="32" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_1_27)">
                                <path d="M378.304 430.668C380.765 434.183 379.918 439.04 376.319 441.377C344.38 462.107 307.585 474.258 269.492 476.588C228.81 479.076 188.233 470.266 152.247 451.131C116.26 431.997 86.2659 403.284 65.58 368.166C44.8941 333.048 34.3224 292.894 35.0337 252.143C35.745 211.392 47.7116 171.631 69.6105 137.257C91.5094 102.882 122.488 75.2333 159.12 57.3665C195.752 39.4997 236.612 32.111 277.182 36.0174C315.17 39.6753 351.519 53.1033 382.715 74.9354C386.231 77.3959 386.908 82.2798 384.325 85.7069C381.743 89.134 376.879 89.8055 373.357 87.3544C344.455 67.2419 310.828 54.8689 275.693 51.4857C237.976 47.854 199.989 54.7231 165.932 71.3336C131.876 87.9441 103.076 113.649 82.7167 145.606C62.3576 177.564 51.2325 214.529 50.5712 252.414C49.9099 290.3 59.7382 327.631 78.9696 360.279C98.2009 392.927 126.086 419.622 159.542 437.411C192.998 455.2 230.722 463.39 268.543 461.077C303.775 458.922 337.813 447.73 367.399 428.639C371.005 426.312 375.842 427.153 378.304 430.668Z" fill="#D9D9D9"/>
                                <circle cx="361.838" cy="255.838" r="149.838" fill="#D9D9D9"/>
                            </g>
                            <defs>
                                <clipPath id="clip0_1_27">
                                    <rect width="512" height="512" fill="white"/>
                                </clipPath>
                            </defs>
                        </svg>
                        <span class="text-lg font-semibold">MCCore</span>
                    </div>
                    <div class="hidden md:flex items-center space-x-6">
                        <a href="/" class="text-gray-300 hover:text-white transition-colors">Dashboard</a>
                        <a href="/keys" class="text-gray-300 hover:text-white transition-colors">API Keys</a>
                        <a href="/assets" class="text-gray-300 hover:text-white transition-colors">Launchers</a>
                        <a href="/java" class="text-gray-300 hover:text-white transition-colors">Java</a>
                        <a href="/news" class="text-gray-300 hover:text-white transition-colors">News</a>
                        <a href="/hwids" class="text-white">HWIDs</a>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/logout" class="text-gray-400 hover:text-white transition-colors">
                        <i class="fas fa-sign-out-alt"></i>
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-6 py-12">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold mb-2">HWID Logs & Bans</h1>
                <p class="text-gray-400">Search login events and manage HWID bans</p>
            </div>
        </div>

        <!-- Search Filters -->
        <div class="card-glass rounded-lg p-6 mb-8">
            <form id="searchForm" class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <input class="input-field px-3 py-2 rounded" type="text" name="hwid" placeholder="HWID">
                <input class="input-field px-3 py-2 rounded" type="text" name="launcher_install_uuid" placeholder="Launcher Install UUID">
                <input class="input-field px-3 py-2 rounded" type="text" name="player_name" placeholder="Player Name">
                <input class="input-field px-3 py-2 rounded" type="text" name="ip_address" placeholder="IP Address">
                <select class="input-field px-3 py-2 rounded" name="account_type">
                    <option value="">Account Type (any)</option>
                    <option>premium</option>
                    <option>cracked</option>
                    <option>offline</option>
                </select>
                <input class="input-field px-3 py-2 rounded" type="datetime-local" name="from_date" placeholder="From date">
                <input class="input-field px-3 py-2 rounded" type="datetime-local" name="to_date" placeholder="To date">
                <select class="input-field px-3 py-2 rounded" name="has_joined_with_this_hwid">
                    <option value="">Has joined with this HWID (any)</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
                <div class="md:col-span-3 flex gap-3 justify-end">
                    <button type="button" id="resetBtn" class="px-4 py-2 border border-gray-600 rounded">Reset</button>
                    <button type="submit" class="px-4 py-2 bg-white text-black rounded">Search</button>
                </div>
            </form>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Logs Table -->
            <div class="card-glass rounded-lg overflow-hidden lg:col-span-2">
                <div class="px-6 py-4 border-b border-gray-700 flex items-center justify-between">
                    <h2 class="text-lg font-semibold">HWID Logs</h2>
                    <div class="text-sm text-gray-400">Total: <span id="totalCount">0</span></div>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-700">
                        <thead class="bg-black/20">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Login Date</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Player</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Account</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">HWID</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Launcher UUID</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">IP</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Joined?</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-700" id="logsTable"></tbody>
                    </table>
                </div>
                <div class="px-6 py-4 border-t border-gray-700 flex items-center justify-between">
                    <div class="text-sm text-gray-400">
                        <button id="prevPage" class="px-3 py-1 border border-gray-700 rounded disabled:opacity-50" disabled>Prev</button>
                        <span class="mx-3" id="pageInfo">Page 1</span>
                        <button id="nextPage" class="px-3 py-1 border border-gray-700 rounded disabled:opacity-50" disabled>Next</button>
                    </div>
                </div>
            </div>

            <!-- Bans Panel -->
            <div class="card-glass rounded-lg">
                <div class="px-6 py-4 border-b border-gray-700 flex items-center justify-between">
                    <h2 class="text-lg font-semibold">Bans</h2>
                    <button id="refreshBans" class="text-sm px-3 py-1 border border-gray-700 rounded">Refresh</button>
                </div>
                <div class="p-6 space-y-4">
                    <form id="banForm" class="space-y-3">
                        <input class="input-field px-3 py-2 rounded w-full" type="text" name="hwid" placeholder="HWID to ban" required>
                        <input class="input-field px-3 py-2 rounded w-full" type="text" name="reason" placeholder="Reason (optional)">
                        <button type="submit" class="px-4 py-2 bg-red-600 hover:bg-red-700 rounded">Ban HWID</button>
                    </form>

                    <div>
                        <h3 class="text-sm font-medium mb-2 text-gray-300">Existing Bans</h3>
                        <div id="bansList" class="space-y-2 text-sm"></div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        const API_KEY = '<%= apiKey %>';
        const API_BASE = '/v2/admin';
        let currentOffset = 0;
        const pageSize = 50;

        function fmtDate(iso) { try { return new Date(iso).toLocaleString(); } catch { return iso; } }

        function serializeSearch() {
            const fd = new FormData(document.getElementById('searchForm'));
            const params = new URLSearchParams();
            for (const [k, v] of fd.entries()) {
                if (v) params.append(k, v.toString());
            }
            params.set('limit', String(pageSize));
            params.set('offset', String(currentOffset));
            return params;
        }

        async function loadLogs() {
            const params = serializeSearch();
            const res = await fetch(`${API_BASE}/hwids?${params.toString()}`, { headers: { 'Authorization': `Bearer ${API_KEY}` } });
            if (!res.ok) { console.error('Failed to load logs'); return; }
            const data = await res.json();
            document.getElementById('totalCount').textContent = data.total || 0;
            document.getElementById('pageInfo').textContent = `Page ${Math.floor(currentOffset / pageSize) + 1}`;
            document.getElementById('prevPage').disabled = currentOffset <= 0;
            document.getElementById('nextPage').disabled = currentOffset + pageSize >= (data.total || 0);
            const bans = await (await fetch(`${API_BASE}/hwids/bans`, { headers: { 'Authorization': `Bearer ${API_KEY}` } })).json();
            const bannedSet = new Set((bans.bans || []).map(b => b.hwid));
            const tbody = document.getElementById('logsTable');
            tbody.innerHTML = (data.logs || []).map(l => `
                <tr class="hover:bg-black/20">
                    <td class="px-6 py-3 whitespace-nowrap text-sm text-gray-300">${fmtDate(l.login_date)}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-sm">${l.player_name}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-sm">
                        <span class="badge ${l.account_type === 'premium' ? 'badge-green' : 'badge-red'}">${l.account_type}</span>
                    </td>
                    <td class="px-6 py-3 whitespace-nowrap text-xs text-gray-400">${l.hwid}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-xs text-gray-400">${l.launcher_install_uuid}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-xs text-gray-400">${l.ip_address || ''}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-xs">${l.has_joined_with_this_hwid ? '<span class="badge badge-green">Yes</span>' : '<span class="badge badge-red">No</span>'}</td>
                    <td class="px-6 py-3 whitespace-nowrap text-sm">
                        ${bannedSet.has(l.hwid)
                            ? `<button class="px-3 py-1 border border-gray-700 rounded" onclick="unban('${l.hwid}')">Unban</button>`
                            : `<button class="px-3 py-1 bg-red-600 hover:bg-red-700 rounded" onclick="ban('${l.hwid}')">Ban</button>`}
                    </td>
                </tr>
            `).join('');
        }

        async function loadBans() {
            const res = await fetch(`${API_BASE}/hwids/bans`, { headers: { 'Authorization': `Bearer ${API_KEY}` } });
            if (!res.ok) return;
            const data = await res.json();
            const list = document.getElementById('bansList');
            list.innerHTML = (data.bans || []).map(b => `
                <div class="flex items-center justify-between px-3 py-2 bg-black/20 rounded border border-gray-800">
                    <div class="truncate">
                        <div class="text-xs text-gray-300">${b.hwid}</div>
                        <div class="text-xs text-gray-500">${b.reason || ''}</div>
                    </div>
                    <button class="text-red-400 hover:text-red-300" onclick="unban('${b.hwid}')"><i class="fas fa-trash"></i></button>
                </div>
            `).join('');
        }

        async function ban(hwid) {
            await fetch(`${API_BASE}/hwids/bans`, {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${API_KEY}`, 'Content-Type': 'application/json' },
                body: JSON.stringify({ hwid, reason: 'Manual ban' })
            });
            await loadBans();
            await loadLogs();
        }

        async function unban(hwid) {
            await fetch(`${API_BASE}/hwids/bans/${encodeURIComponent(hwid)}`, {
                method: 'DELETE',
                headers: { 'Authorization': `Bearer ${API_KEY}` }
            });
            await loadBans();
            await loadLogs();
        }

        document.getElementById('searchForm').addEventListener('submit', (e) => { e.preventDefault(); currentOffset = 0; loadLogs(); });
        document.getElementById('resetBtn').addEventListener('click', () => { (document.getElementById('searchForm')).reset(); currentOffset = 0; loadLogs(); });
        document.getElementById('prevPage').addEventListener('click', () => { currentOffset = Math.max(0, currentOffset - pageSize); loadLogs(); });
        document.getElementById('nextPage').addEventListener('click', () => { currentOffset += pageSize; loadLogs(); });
        document.getElementById('banForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const fd = new FormData(e.target);
            await fetch(`${API_BASE}/hwids/bans`, {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${API_KEY}`, 'Content-Type': 'application/json' },
                body: JSON.stringify({ hwid: fd.get('hwid'), reason: fd.get('reason') })
            });
            e.target.reset();
            await loadBans();
            await loadLogs();
        });
        document.getElementById('refreshBans').addEventListener('click', loadBans);

        document.addEventListener('DOMContentLoaded', async () => {
            await loadLogs();
            await loadBans();
        });
    </script>
</body>
</html>


