<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - MCCore Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #000000;
            color: #ffffff;
        }
        .nav-glass {
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
        }
        .card-glass {
            background: rgba(20, 20, 20, 0.6);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .input-field {
            background: rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: border-color 0.2s ease;
        }
        .input-field:focus {
            border-color: #ffffff;
            outline: none;
        }
    </style>
</head>
<body class="min-h-screen bg-black text-white">
    <!-- Navigation -->
    <nav class="nav-glass border-b border-gray-800 sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-6">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-8">
                    <div class="flex items-center space-x-2">
                        <svg width="32" height="32" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_1_27)">
                                <path d="M378.304 430.668C380.765 434.183 379.918 439.04 376.319 441.377C344.38 462.107 307.585 474.258 269.492 476.588C228.81 479.076 188.233 470.266 152.247 451.131C116.26 431.997 86.2659 403.284 65.58 368.166C44.8941 333.048 34.3224 292.894 35.0337 252.143C35.745 211.392 47.7116 171.631 69.6105 137.257C91.5094 102.882 122.488 75.2333 159.12 57.3665C195.752 39.4997 236.612 32.111 277.182 36.0174C315.17 39.6753 351.519 53.1033 382.715 74.9354C386.231 77.3959 386.908 82.2798 384.325 85.7069C381.743 89.134 376.879 89.8055 373.357 87.3544C344.455 67.2419 310.828 54.8689 275.693 51.4857C237.976 47.854 199.989 54.7231 165.932 71.3336C131.876 87.9441 103.076 113.649 82.7167 145.606C62.3576 177.564 51.2325 214.529 50.5712 252.414C49.9099 290.3 59.7382 327.631 78.9696 360.279C98.2009 392.927 126.086 419.622 159.542 437.411C192.998 455.2 230.722 463.39 268.543 461.077C303.775 458.922 337.813 447.73 367.399 428.639C371.005 426.312 375.842 427.153 378.304 430.668Z" fill="#D9D9D9"/>
                                <circle cx="361.838" cy="255.838" r="149.838" fill="#D9D9D9"/>
                            </g>
                            <defs>
                                <clipPath id="clip0_1_27">
                                    <rect width="512" height="512" fill="white"/>
                                </clipPath>
                            </defs>
                        </svg>
                        <span class="text-lg font-semibold">MCCore</span>
                    </div>
                    <div class="hidden md:flex items-center space-x-6">
                        <a href="/" class="text-gray-300 hover:text-white transition-colors">Dashboard</a>
                        <a href="/keys" class="text-white">API Keys</a>
                        <a href="/assets" class="text-gray-300 hover:text-white transition-colors">Launchers</a>
                        <a href="/java" class="text-gray-300 hover:text-white transition-colors">Java</a>
                        <a href="/news" class="text-gray-300 hover:text-white transition-colors">News</a>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/logout" class="text-gray-400 hover:text-white transition-colors">
                        <i class="fas fa-sign-out-alt"></i>
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-6 py-12">
        <!-- Header -->
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold mb-2">API Key Management</h1>
                <p class="text-gray-400">Create and manage authentication keys for API access</p>
            </div>
            <button 
                onclick="showCreateKeyModal()"
                class="px-6 py-3 bg-white text-black rounded-md hover:bg-gray-100 transition-colors"
            >
                Create Key
            </button>
        </div>

        <!-- Create Key Modal -->
        <div id="createKeyModal" class="hidden fixed inset-0 bg-black/50 backdrop-blur-sm overflow-y-auto h-full w-full z-50">
            <div class="relative top-20 mx-auto p-6 border w-full max-w-md shadow-2xl rounded-lg bg-gray-900 border-gray-700">
                <div class="mb-6">
                    <h3 class="text-xl font-bold mb-2">Create New API Key</h3>
                    <p class="text-gray-400 text-sm">Generate a new authentication key for API access</p>
                </div>
                <form id="createKeyForm">
                    <div class="mb-6">
                        <label for="keyName" class="block text-sm font-medium text-gray-300 mb-2">Key Name (Optional)</label>
                        <input 
                            type="text" 
                            id="keyName" 
                            name="name"
                            placeholder="Enter a name for this key"
                            class="input-field w-full px-4 py-3 rounded-md text-white placeholder-gray-400"
                        >
                    </div>
                    <div class="flex justify-end space-x-3">
                        <button 
                            type="button"
                            onclick="hideCreateKeyModal()"
                            class="px-6 py-3 text-gray-300 border border-gray-600 rounded-md hover:bg-gray-800 transition-colors"
                        >
                            Cancel
                        </button>
                        <button 
                            type="submit"
                            class="px-6 py-3 bg-white text-black rounded-md hover:bg-gray-100 transition-colors"
                        >
                            Create Key
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- API Keys List -->
        <div class="card-glass rounded-lg overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-700">
                <h2 class="text-lg font-semibold">API Keys</h2>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-700">
                    <thead class="bg-black/20">
                        <tr>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Created</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Last Used</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-700" id="keysTable">
                        <!-- Keys will be loaded here via JavaScript -->
                    </tbody>
                </table>
            </div>
            <div id="noKeysMessage" class="px-6 py-12 text-center text-gray-400 hidden">
                <i class="fas fa-key text-3xl mb-4 opacity-50"></i>
                <p class="text-lg font-medium mb-2">No API keys found</p>
                <p class="text-sm">Create your first API key to get started</p>
            </div>
        </div>
    </main>

    <script>
        function showCreateKeyModal() {
            document.getElementById('createKeyModal').classList.remove('hidden');
        }

        function hideCreateKeyModal() {
            document.getElementById('createKeyModal').classList.add('hidden');
        }

        async function loadApiKeys() {
            try {
                const response = await fetch('/v2/admin/keys', {
                    headers: {
                        'Authorization': 'Bearer <%= apiKey %>'
                    }
                });

                if (response.ok) {
                    const data = await response.json();
                    displayApiKeys(data.keys || []);
                } else {
                    console.error('Failed to load API keys');
                    document.getElementById('noKeysMessage').classList.remove('hidden');
                }
            } catch (error) {
                console.error('Error loading API keys:', error);
                document.getElementById('noKeysMessage').classList.remove('hidden');
            }
        }

        function displayApiKeys(keys) {
            const tbody = document.getElementById('keysTable');
            const noKeysMessage = document.getElementById('noKeysMessage');

            if (keys.length === 0) {
                tbody.innerHTML = '';
                noKeysMessage.classList.remove('hidden');
                return;
            }

            noKeysMessage.classList.add('hidden');
            tbody.innerHTML = keys.map(key => `
                <tr class="hover:bg-black/20 transition-colors">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center space-x-3">
                            <div class="w-2 h-2 ${key.is_active ? 'bg-green-400' : 'bg-red-400'} rounded-full"></div>
                            <span class="text-sm font-medium">${key.name || 'Unnamed Key'}</span>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="inline-flex px-3 py-1 text-xs font-semibold rounded-full ${key.is_active ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'}">
                            ${key.is_active ? 'Active' : 'Inactive'}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                        ${new Date(key.created_at).toLocaleDateString()}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                        ${key.last_used ? new Date(key.last_used).toLocaleDateString() : 'Never'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                        <button 
                            onclick="deactivateKey('${key.key_hash}')"
                            class="text-red-400 hover:text-red-300 transition-colors"
                            title="Deactivate key"
                        >
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        async function createApiKey(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            
            try {
                const response = await fetch('/v2/admin/keys', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer <%= apiKey %>'
                    },
                    body: JSON.stringify({
                        name: formData.get('name') || undefined
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    hideCreateKeyModal();
                    event.target.reset();
                    loadApiKeys();
                    alert('API key created successfully!');
                } else {
                    const error = await response.json();
                    alert('Failed to create API key: ' + error.message);
                }
            } catch (error) {
                console.error('Error creating API key:', error);
                alert('Failed to create API key');
            }
        }

        async function deactivateKey(keyHash) {
            if (!confirm('Are you sure you want to deactivate this API key? This action cannot be undone.')) {
                return;
            }
            
            try {
                const response = await fetch(`/v2/admin/keys/${keyHash}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': 'Bearer <%= apiKey %>'
                    }
                });

                if (response.ok) {
                    loadApiKeys();
                } else {
                    const error = await response.json();
                    alert('Failed to deactivate key: ' + error.message);
                }
            } catch (error) {
                console.error('Error deactivating key:', error);
                alert('Failed to deactivate key');
            }
        }

        // Load API keys on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadApiKeys();
            document.getElementById('createKeyForm').addEventListener('submit', createApiKey);
        });
    </script>
</body>
</html> 